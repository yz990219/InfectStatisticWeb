/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-03-13 16:12:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import hw2.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("hw2");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	String date = request.getParameter("date");
	//System.out.println(date);
	//用于测试用的自组命令行，记得注释掉再把commandline_analysis.analysis(commandline_test);
	//改成commandline_analysis.analysis(cmdline);
	ArrayList<String> commandline_test = new ArrayList<String>();
	commandline_test.add("list");
	commandline_test.add("-log");
	commandline_test.add("D:\\InfectStatisticWeb\\MyInfectStatisticWeb\\WebContent\\log\\");
	commandline_test.add("-out");
	commandline_test.add("D:\\InfectStatistic-main\\221701430\\result\\test.txt");
	commandline_test.add("-date");
	commandline_test.add(date);
	CommandLineAnalysis commandline_analysis = new CommandLineAnalysis();
	CommandLine commandline = commandline_analysis.analysis(commandline_test);
	//测试用
	CommandLineRun cmd_run = new CommandLineRun(commandline);

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EDGE\">\r\n");
      out.write("<title>全国疫情地图</title>\r\n");
      out.write("<style>\r\n");
      out.write("#china-map {\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\theight: 1000px;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#box {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tbackground-color: goldenrod;\r\n");
      out.write("\twidth: 180px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#box-title {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#buttons {\r\n");
      out.write("\tmargin-left: 260px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/echarts.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/map/china.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"map\">\r\n");
      out.write("\t\t<div style=\"text-align: center; clear: both;\">\r\n");
      out.write("\t\t\t<script src=\"/gg_bd_ad_720x90.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t\t\t<script src=\"/follow.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"buttons\">\r\n");
      out.write("\t\t\t<button id=\"back\">返回全国</button>\r\n");
      out.write("\t\t\t<form action=\"dateChooseProvince.jsp\" style=\"display: none;\" id=\"province\">\r\n");
      out.write("\t\t\t\t<span>是否查看</span> <span id=\"yz\" name=\"yz\" style=\"font-size: 20px;\">全国</span>\r\n");
      out.write("\t\t\t\t<span>详细数据</span> \r\n");
      out.write("\t\t\t\t<input id=\"province_value\" name=\"province_value\"\r\n");
      out.write("\t\t\t\t\ttype=\"text\" value=\"测试\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t<button type=\"submit\">确定</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<h1 style=\"text-align: center;\">");
      out.print(date);
      out.write("疫情</h1>\r\n");
      out.write("\t\t<div id=\"china-map\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t//地图使用的JavaScript\r\n");
      out.write("\t\tvar myChart = echarts.init(document.getElementById('china-map'));\r\n");
      out.write("\t\tvar oBack = document.getElementById(\"back\");\r\n");
      out.write("\t\tvar provinces = [ 'shanghai', 'hebei', 'shanxi', 'neimenggu',\r\n");
      out.write("\t\t\t\t'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang',\r\n");
      out.write("\t\t\t\t'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei',\r\n");
      out.write("\t\t\t\t'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan',\r\n");
      out.write("\t\t\t\t'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai',\r\n");
      out.write("\t\t\t\t'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing',\r\n");
      out.write("\t\t\t\t'xianggang', 'aomen' ];\r\n");
      out.write("\t\tvar provincesText = [ '上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏',\r\n");
      out.write("\t\t\t\t'浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西',\r\n");
      out.write("\t\t\t\t'海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆',\r\n");
      out.write("\t\t\t\t'北京', '天津', '重庆', '香港', '澳门' ];\r\n");
      out.write("\t\tvar seriesData = [ {\r\n");
      out.write("\t\t\tname : '北京',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("北京").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '天津',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("天津").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '上海',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("上海").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '重庆',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("重庆").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '河北',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("河北").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '河南',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("河南").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '云南',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("云南").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '辽宁',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("辽宁").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '黑龙江',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("黑龙江").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '湖南',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("湖南").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '安徽',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("安徽").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '山东',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("山东").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '新疆',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("新疆").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '江苏',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("江苏").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '浙江',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("浙江").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '江西',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("江西").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '湖北',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("湖北").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '广西',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("广西").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '甘肃',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("甘肃").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '山西',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("山西").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '内蒙古',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("内蒙古").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '陕西',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("陕西").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '吉林',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("吉林").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '福建',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("福建").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '贵州',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("贵州").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '广东',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("广东").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '青海',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("青海").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '西藏',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("西藏").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '四川',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("四川").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '宁夏',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("宁夏").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '海南',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("海南").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '台湾',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("台湾").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '香港',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("香港").ip);
      out.write("\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tname : '澳门',\r\n");
      out.write("\t\t\tvalue :\r\n");
      out.write("\t");
      out.print(cmd_run.get_province("澳门").ip);
      out.write("\r\n");
      out.write("\t\t} ];\r\n");
      out.write("\t\toBack.onclick = function() {\r\n");
      out.write("\t\t\tdocument.getElementById(\"yz\").innerHTML = \"中国\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"province\").style.display = \"none\";\r\n");
      out.write("\t\t\tinitEcharts(\"china\", \"中国\");\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tinitEcharts(\"china\", \"中国\");\r\n");
      out.write("\t\t// 初始化echarts\r\n");
      out.write("\t\tfunction initEcharts(pName, Chinese_) {\r\n");
      out.write("\t\t\tvar tmpSeriesData = pName === \"china\" ? seriesData : [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar option = {\r\n");
      out.write("\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\ttext : Chinese_ || pName,\r\n");
      out.write("\t\t\t\t\tleft : 'center'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\t\ttrigger : 'item',\r\n");
      out.write("\t\t\t\t\tformatter : '{b}<br/>{c}人确诊'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tvisualMap : {\r\n");
      out.write("\t\t\t\t\ttype : 'piecewise',\r\n");
      out.write("\t\t\t\t\tpieces : [ {\r\n");
      out.write("\t\t\t\t\t\tmin : 1000,\r\n");
      out.write("\t\t\t\t\t\tmax : 1000000,\r\n");
      out.write("\t\t\t\t\t\tlabel : '大于等于1000人',\r\n");
      out.write("\t\t\t\t\t//color: '#372a28'\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tmin : 500,\r\n");
      out.write("\t\t\t\t\t\tmax : 999,\r\n");
      out.write("\t\t\t\t\t\tlabel : '确诊500-999人',\r\n");
      out.write("\t\t\t\t\t//color: '#974236'\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tmin : 100,\r\n");
      out.write("\t\t\t\t\t\tmax : 499,\r\n");
      out.write("\t\t\t\t\t\tlabel : '确诊100-499人',\r\n");
      out.write("\t\t\t\t\t//color: '#ee7263'\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tmin : 1,\r\n");
      out.write("\t\t\t\t\t\tmax : 99,\r\n");
      out.write("\t\t\t\t\t\tlabel : '确诊1-99人',\r\n");
      out.write("\t\t\t\t\t//color: '#f5bba7'\r\n");
      out.write("\t\t\t\t\t}, ],\r\n");
      out.write("\t\t\t\t\t//不知道拿来干嘛\r\n");
      out.write("\t\t\t\t\tcolor : [ '#974236', '#f5bba7' ]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tseries : [ {\r\n");
      out.write("\t\t\t\t\tname : Chinese_ || pName,\r\n");
      out.write("\t\t\t\t\ttype : 'map',\r\n");
      out.write("\t\t\t\t\tmapType : pName,\r\n");
      out.write("\t\t\t\t\troam : false, //是否开启鼠标缩放和平移漫游\r\n");
      out.write("\t\t\t\t\tdata : tmpSeriesData,\r\n");
      out.write("\t\t\t\t\ttop : \"3%\", //组件距离容器的距离\r\n");
      out.write("\t\t\t\t\tzoom : 1.1,\r\n");
      out.write("\t\t\t\t\tselectedMode : 'single',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\tnormal : {\r\n");
      out.write("\t\t\t\t\t\t\tshow : true, //显示省份标签\r\n");
      out.write("\t\t\t\t\t\t\ttextStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tcolor : \"#fbfdfe\"\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//省份标签字体颜色\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\temphasis : { //对应的鼠标悬浮效果\r\n");
      out.write("\t\t\t\t\t\t\tshow : true,\r\n");
      out.write("\t\t\t\t\t\t\ttextStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tcolor : \"#323232\"\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\titemStyle : {\r\n");
      out.write("\t\t\t\t\t\tnormal : {\r\n");
      out.write("\t\t\t\t\t\t\tborderWidth : .5, //区域边框宽度\r\n");
      out.write("\t\t\t\t\t\t\tborderColor : '#0550c3', //区域边框颜色\r\n");
      out.write("\t\t\t\t\t\t\tareaColor : \"#4ea397\", //区域颜色\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\temphasis : {\r\n");
      out.write("\t\t\t\t\t\t\tborderWidth : .5,\r\n");
      out.write("\t\t\t\t\t\t\tborderColor : '#4b0082',\r\n");
      out.write("\t\t\t\t\t\t\tareaColor : \"#ece39e\",\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t\tmyChart.off(\"click\");\r\n");
      out.write("\t\t\tvar temp;\r\n");
      out.write("\t\t\tif (pName === \"china\") { // 全国时，添加click 进入省级\r\n");
      out.write("\t\t\t\tmyChart\r\n");
      out.write("\t\t\t\t\t\t.on(\r\n");
      out.write("\t\t\t\t\t\t\t\t'click',\r\n");
      out.write("\t\t\t\t\t\t\t\tfunction(param) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconsole.log(param.name);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t// 遍历取到provincesText 中的下标  去拿到对应的省js\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor (var i = 0; i < provincesText.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (param.name === provincesText[i]) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//显示对应省份的方法\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tshowProvince(provinces[i],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tprovincesText[i]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"yz\").innerHTML = provincesText[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"province\").style.display = \"block\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t.getElementById(\"province_value\").value = provincesText[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (param.componentType === 'series') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar provinceName = param.name;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$('#box').css('display', 'block');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#box-title\").html(provinceName);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t} else { // 省份，添加双击 回退到全国\r\n");
      out.write("\t\t\t\tmyChart.on(\"dblclick\", function() {\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"yz\").innerHTML = \"中国\";\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"province\").style.display = \"none\";\r\n");
      out.write("\t\t\t\t\tinitEcharts(\"china\", \"中国\");\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 展示对应的省\r\n");
      out.write("\t\tfunction showProvince(pName, Chinese_) {\r\n");
      out.write("\t\t\t//这写省份的js都是通过在线构建工具生成的，保存在本地，需要时加载使用即可，最好不要一开始全部直接引入。\r\n");
      out.write("\t\t\tloadBdScript('$' + pName + 'JS', './js/map/province/' + pName\r\n");
      out.write("\t\t\t\t\t+ '.js', function() {\r\n");
      out.write("\t\t\t\tinitEcharts(Chinese_);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 加载对应的JS\r\n");
      out.write("\t\tfunction loadBdScript(scriptId, url, callback) {\r\n");
      out.write("\t\t\tvar script = document.createElement(\"script\");\r\n");
      out.write("\t\t\tscript.type = \"text/javascript\";\r\n");
      out.write("\t\t\tif (script.readyState) { //IE\r\n");
      out.write("\t\t\t\tscript.onreadystatechange = function() {\r\n");
      out.write("\t\t\t\t\tif (script.readyState === \"loaded\"\r\n");
      out.write("\t\t\t\t\t\t\t|| script.readyState === \"complete\") {\r\n");
      out.write("\t\t\t\t\t\tscript.onreadystatechange = null;\r\n");
      out.write("\t\t\t\t\t\tcallback();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t} else { // Others\r\n");
      out.write("\t\t\t\tscript.onload = function() {\r\n");
      out.write("\t\t\t\t\tcallback();\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tscript.src = url;\r\n");
      out.write("\t\t\tscript.id = scriptId;\r\n");
      out.write("\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\r\n");
      out.write("\t\t};\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
