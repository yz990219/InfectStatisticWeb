/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-03-13 12:47:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=EDGE\">\r\n");
      out.write("    <title>HTML5 Canvas实现中国地图DEMO演示</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        #china-map {\r\n");
      out.write("            width: 1000px;\r\n");
      out.write("            height: 1000px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #box {\r\n");
      out.write("            display: none;\r\n");
      out.write("            background-color: goldenrod;\r\n");
      out.write("            width: 180px;\r\n");
      out.write("            height: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #box-title {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"js/echarts.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"js/map/china.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div style=\"text-align:center;clear:both;\">\r\n");
      out.write("        <script src=\"/gg_bd_ad_720x90.js\" type=\"text/javascript\"></script>\r\n");
      out.write("        <script src=\"/follow.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    </div>\r\n");
      out.write("    <button id=\"back\">返回全国</button>\r\n");
      out.write("    \r\n");
      out.write("    <form action=\"indexRes.jsp\" style = \"display:none;\" id = \"province\">     \r\n");
      out.write("       <div id=\"yz\" name=\"yz\" >全国</div>\r\n");
      out.write("       <input id=\"province_value\" name=\"province_value\" type=\"text\" value=\"测试\">\r\n");
      out.write("       <button type=\"submit\">选择</button>\r\n");
      out.write("    </form>\r\n");
      out.write("        \r\n");
      out.write("    <div id=\"china-map\"></div>\r\n");
      out.write("    <div id=\"main\" style=\"width: 600px;height:400px; margin-left: 500px;\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        //折线图使用的JavaScript\r\n");
      out.write("        // 基于准备好的dom，初始化echarts实例\r\n");
      out.write("        var myChart = echarts.init(document.getElementById('main'));\r\n");
      out.write("        var mydate1 = new Array();\r\n");
      out.write("        //mydate = [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"子\", \"高跟鞋\", \"袜子\"];\r\n");
      out.write("        mydate1[0] = \"11\";\r\n");
      out.write("        mydate1[1] = \"22\";\r\n");
      out.write("        mydate1[2] = \"33\";\r\n");
      out.write("        mydate1[3] = \"44\";\r\n");
      out.write("        mydate1[4] = \"55\";\r\n");
      out.write("        mydate1[5] = \"66\";\r\n");
      out.write("        // 指定图表的配置项和数据\r\n");
      out.write("        var option = {\r\n");
      out.write("            title: {\r\n");
      out.write("                text: '第一个 ECharts 实例'\r\n");
      out.write("            },\r\n");
      out.write("            tooltip: {},\r\n");
      out.write("            legend: {\r\n");
      out.write("                data: ['销量', '疑似']\r\n");
      out.write("            },\r\n");
      out.write("            xAxis: {\r\n");
      out.write("                data: mydate1\r\n");
      out.write("            },\r\n");
      out.write("            yAxis: {},\r\n");
      out.write("            series: [{\r\n");
      out.write("                name: '销量',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                data: [5, 20, 36, 10, 10, 20]\r\n");
      out.write("\r\n");
      out.write("            }, {\r\n");
      out.write("                name: '疑似',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                data: [1, 25, 14, 16, 18, 300]\r\n");
      out.write("\r\n");
      out.write("            }]\r\n");
      out.write("        };\r\n");
      out.write("        // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("        myChart.setOption(option);\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        //地图使用的JavaScript\r\n");
      out.write("        var myChart = echarts.init(document.getElementById('china-map'));\r\n");
      out.write("        var oBack = document.getElementById(\"back\");\r\n");
      out.write("        var provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen'];\r\n");
      out.write("        var provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门'];\r\n");
      out.write("        var seriesData = [{\r\n");
      out.write("            name: '北京',\r\n");
      out.write("            value: 100\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '天津',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '上海',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '重庆',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '河北',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '河南',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '云南',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '辽宁',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '黑龙江',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '湖南',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '安徽',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '山东',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '新疆',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '江苏',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '浙江',\r\n");
      out.write("            value: 111\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '江西',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '湖北',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '广西',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '甘肃',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '山西',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '内蒙古',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '陕西',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '吉林',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '福建',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '贵州',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '广东',\r\n");
      out.write("            value: 597\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '青海',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '西藏',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '四川',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '宁夏',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '海南',\r\n");
      out.write("            value: 60\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '台湾',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '香港',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }, {\r\n");
      out.write("            name: '澳门',\r\n");
      out.write("            value: 0\r\n");
      out.write("        }];\r\n");
      out.write("        oBack.onclick = function() {\r\n");
      out.write("            document.getElementById(\"yz\").innerHTML = \"中国\";\r\n");
      out.write("            document.getElementById(\"province\").style.display = \"none\";\r\n");
      out.write("            initEcharts(\"china\", \"中国\");\r\n");
      out.write("        };\r\n");
      out.write("        initEcharts(\"china\", \"中国\");\r\n");
      out.write("        // 初始化echarts\r\n");
      out.write("        function initEcharts(pName, Chinese_) {\r\n");
      out.write("            var tmpSeriesData = pName === \"china\" ? seriesData : [];\r\n");
      out.write("\r\n");
      out.write("            var option = {\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: Chinese_ || pName,\r\n");
      out.write("                    left: 'center'\r\n");
      out.write("                },\r\n");
      out.write("                tooltip: {\r\n");
      out.write("                    trigger: 'item',\r\n");
      out.write("                    formatter: '{b}<br/>{c}人确诊'\r\n");
      out.write("                },\r\n");
      out.write("                visualMap: {\r\n");
      out.write("                    type: 'piecewise',\r\n");
      out.write("                    pieces: [{\r\n");
      out.write("                        min: 1000,\r\n");
      out.write("                        max: 1000000,\r\n");
      out.write("                        label: '大于等于1000人',\r\n");
      out.write("                        //color: '#372a28'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        min: 500,\r\n");
      out.write("                        max: 999,\r\n");
      out.write("                        label: '确诊500-999人',\r\n");
      out.write("                        //color: '#974236'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        min: 100,\r\n");
      out.write("                        max: 499,\r\n");
      out.write("                        label: '确诊100-499人',\r\n");
      out.write("                        //color: '#ee7263'\r\n");
      out.write("                    }, {\r\n");
      out.write("                        min: 1,\r\n");
      out.write("                        max: 99,\r\n");
      out.write("                        label: '确诊1-99人',\r\n");
      out.write("                        //color: '#f5bba7'\r\n");
      out.write("                    }, ],\r\n");
      out.write("                    //不知道拿来干嘛\r\n");
      out.write("                    color: ['#974236', '#f5bba7']\r\n");
      out.write("                },\r\n");
      out.write("                series: [{\r\n");
      out.write("                    name: Chinese_ || pName,\r\n");
      out.write("                    type: 'map',\r\n");
      out.write("                    mapType: pName,\r\n");
      out.write("                    roam: false, //是否开启鼠标缩放和平移漫游\r\n");
      out.write("                    data: tmpSeriesData,\r\n");
      out.write("                    top: \"3%\", //组件距离容器的距离\r\n");
      out.write("                    zoom: 1.1,\r\n");
      out.write("                    selectedMode: 'single',\r\n");
      out.write("\r\n");
      out.write("                    label: {\r\n");
      out.write("                        normal: {\r\n");
      out.write("                            show: true, //显示省份标签\r\n");
      out.write("                            textStyle: {\r\n");
      out.write("                                color: \"#fbfdfe\"\r\n");
      out.write("                            } //省份标签字体颜色\r\n");
      out.write("                        },\r\n");
      out.write("                        emphasis: { //对应的鼠标悬浮效果\r\n");
      out.write("                            show: true,\r\n");
      out.write("                            textStyle: {\r\n");
      out.write("                                color: \"#323232\"\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    itemStyle: {\r\n");
      out.write("                        normal: {\r\n");
      out.write("                            borderWidth: .5, //区域边框宽度\r\n");
      out.write("                            borderColor: '#0550c3', //区域边框颜色\r\n");
      out.write("                            areaColor: \"#4ea397\", //区域颜色\r\n");
      out.write("\r\n");
      out.write("                        },\r\n");
      out.write("\r\n");
      out.write("                        emphasis: {\r\n");
      out.write("                            borderWidth: .5,\r\n");
      out.write("                            borderColor: '#4b0082',\r\n");
      out.write("                            areaColor: \"#ece39e\",\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                }]\r\n");
      out.write("\r\n");
      out.write("            };\r\n");
      out.write("            myChart.setOption(option);\r\n");
      out.write("            myChart.off(\"click\");\r\n");
      out.write("            var temp;\r\n");
      out.write("            if (pName === \"china\") { // 全国时，添加click 进入省级\r\n");
      out.write("                myChart.on('click', function(param) {\r\n");
      out.write("                    console.log(param.name);\r\n");
      out.write("                    // 遍历取到provincesText 中的下标  去拿到对应的省js\r\n");
      out.write("                    for (var i = 0; i < provincesText.length; i++) {\r\n");
      out.write("                        if (param.name === provincesText[i]) {\r\n");
      out.write("                            //显示对应省份的方法\r\n");
      out.write("                            showProvince(provinces[i], provincesText[i]);\r\n");
      out.write("                            document.getElementById(\"yz\").innerHTML = provincesText[i];\r\n");
      out.write("                            document.getElementById(\"province\").style.display = \"block\";\r\n");
      out.write("                            document.getElementById(\"province_value\").value = provincesText[i];\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    if (param.componentType === 'series') {\r\n");
      out.write("                        var provinceName = param.name;\r\n");
      out.write("                        $('#box').css('display', 'block');\r\n");
      out.write("                        $(\"#box-title\").html(provinceName);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } else { // 省份，添加双击 回退到全国\r\n");
      out.write("                myChart.on(\"dblclick\", function() {\r\n");
      out.write("                    document.getElementById(\"yz\").innerHTML = \"中国\";\r\n");
      out.write("                    document.getElementById(\"province\").style.display = \"none\";\r\n");
      out.write("                    initEcharts(\"china\", \"中国\");\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        // 展示对应的省\r\n");
      out.write("        function showProvince(pName, Chinese_) {\r\n");
      out.write("            //这写省份的js都是通过在线构建工具生成的，保存在本地，需要时加载使用即可，最好不要一开始全部直接引入。\r\n");
      out.write("            loadBdScript('$' + pName + 'JS', './js/map/province/' + pName + '.js', function() {\r\n");
      out.write("                initEcharts(Chinese_);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        // 加载对应的JS\r\n");
      out.write("        function loadBdScript(scriptId, url, callback) {\r\n");
      out.write("            var script = document.createElement(\"script\");\r\n");
      out.write("            script.type = \"text/javascript\";\r\n");
      out.write("            if (script.readyState) { //IE\r\n");
      out.write("                script.onreadystatechange = function() {\r\n");
      out.write("                    if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n");
      out.write("                        script.onreadystatechange = null;\r\n");
      out.write("                        callback();\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("            } else { // Others\r\n");
      out.write("                script.onload = function() {\r\n");
      out.write("                    callback();\r\n");
      out.write("                };\r\n");
      out.write("            }\r\n");
      out.write("            script.src = url;\r\n");
      out.write("            script.id = scriptId;\r\n");
      out.write("            document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n");
      out.write("        };\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
